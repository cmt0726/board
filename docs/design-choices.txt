Our core design is centrally focused around the Board class. Our entry is out of Deadwood.java, but
From there, we utilize low coupling between the board and the xmlParsing class in order to sustain a
more independent product design that reduces depencies on other data.

Aside from our core set up, we implemented cohesion in much of our helper classes. This let us 
interpet data from the seperate objects in a predictable way.
For example, Our player class has no programming logic inside, it is simply a connection
between seperate classes and their goals.

Another example would be the interactions between Board.java and xmlParser.java. In this relationship 
Board knows nothing about implementation details, Board simply acts on received data, and if that
data were to change, then a simple array indexing difference is all that would be needed.
Because of this, semantic labelling and compartmentalized data, working with the xml files
was a smooth process.

With the completion and implementation of the game, there's quite a bit that we learned as well.
Seperating out functionaility and implementation details from class interactions was essential.
What was also important was how proper data access and data labelling made testing
really easy, where we could change a few variables, and then test if our endgame functions worked- for example.

The biggest change we made was getting rid of any 2D array in exchange for hash maps for the board locations. 
This was easier to acqure adjacent positions on the board for the player to move to. 
We also merged the Increase Rank, Act, and Take Role actions into one Player Action class to make it easier to pull what the player would like to do. 
Changing how the board and role info worked with the hashmaps also gave the Board and Player classes more variables that needed to be accounted for. 
Having more getters and setters allowed for easy access to data changes required to update what the player can do. 
The hashmap and Player Action class also made the Move class irrelevant so that was removed.
